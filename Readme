Here is the explanatory material for paper 'Improving Reproducibility and Performance of Radiomics in Low Dose CT 
using Cycle GANs'.

Codes of this Cycle GAN are heavily reused from vanhuyz(https://github.com/vanhuyz/CycleGAN-TensorFlow) 

build_data.py used to build TFrecord to train Cycle GAN. As we mentioned in our paper, we introduced slice-paired 
training strategy in Cycle GAN training, in our execution of this strategy, we need to push training images into 
two TFrecords (TFrecord for original domain and for target domain) in paired manner. In other words, images need to 
store in paired manner in two directories. More specific, first image of low dose CT images named as '000001.jpg'
(images should be stored in grey manner rather than RGB manner, mean while, we suggest to reshape your images into
512*512 size) in directory './data/part_A' and the corresponding high dose CT images named as '000001.jpg' in 
directory './data/part_B'. The generatored TFrecords can be used in ablation study training too, random feeding for 
networks can be achieved in reader.py. we added 2 sample images into part_A and part_B directory, now clear images 
are stored in part_B directory and noisy images are stored in part_A directory.

train.py used to train netwotk, we ran train.py in your deep learning IDE environment, and then waited network 
training arrive our wanted epochs. Toolbox tensorboard can be used to monitor model training. Killing kernel when
you think network training has been finished.

export_graph.py was the third file we need to run when network training was finished. You need to rewrite parameter
'checkpoints' to the dir which stored your training files.

inference.py was the last file we need to run, speed of inference.py running would decrease when inference.py has 
transferred over 100 images in one running. You need to kill and restart your kernel. For images which stored in 
'./data/Results/inputs',you need to renamed image as '000001.jpg'. We added 5 noisy CT image samples into inputs and
we suggest you to use model 'Simulation Data Trained Cycle GAN' to denoise sample image, link of pre-trained models 
are shown as follow. 

The pre-trained models of our study can be find here(https://www.amazon.de/clouddrive/share/CLZZX0itnAMyYlFaeexgTMVe9yyCTnLIuYOQhrO90uk)
Using the pre-trained models, you can use inference.py to denoise low dose CT directly. 
